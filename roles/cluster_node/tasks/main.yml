---
- name: Set up Ubuntu as a node in a Kubernetes cluster
  block:
  # Human over cluster, Kubernetes can handle it
  - name: Turn off all sleep sensors
    block:
      # block sleeping - especially for NTB
    - name: Modify HandleLidSwitch setting
      ansible.builtin.lineinfile:
        path: /etc/systemd/logind.conf
        regexp: '^#?HandleLidSwitch='
        line: 'HandleLidSwitch=ignore'

    - name: Modify IdleAction setting
      ansible.builtin.lineinfile:
        path: /etc/systemd/logind.conf
        regexp: '^#?IdleAction='
        line: 'IdleAction=ignore'

    - name: Check if UPower exists
      ansible.builtin.stat:
        path: /etc/UPower/UPower.conf
      register: upower_conf

    - name: Modify IgnoreLid setting
      ansible.builtin.lineinfile:
        path: /etc/UPower/UPower.conf
        regexp: '^IgnoreLid='
        line: 'IgnoreLid=true'
      when: upower_conf.stat.exists
    when: desktop != True

  # block the start of GNOME Virtual File System
  - name: Check if ubuntu-desktop is installed
    command: apt list -a ubuntu-desktop
    register: ubuntu_desktop_status
    ignore_errors: true

  - name: Include tasks disable desktop services
    include_tasks: "{{ role_path }}/tasks/desktop_services.yaml"
    when: 
      - desktop != True
      - "'ubuntu-desktop' in ubuntu_desktop_status.stdout or 'instal' in ubuntu_desktop_status.stdout"

  # set and enable Wake-on-LAN
  - name: Add Wake-on-LAN service
    ansible.builtin.template:
      src: templates/wol-enable.service.j2
      dest: "/etc/systemd/system/wol-enable.service"
      owner: root
      group: root
      mode: '0644'

  - name: Wake-on-LAN activation at startup
    ansible.builtin.systemd_service:
      name: wol-enable
      enabled: true

  # high availability via keepalived
  - name: Install keepalived service
    ansible.builtin.apt:
      name: keepalived
      state: present

  - name: Add keepalived config
    ansible.builtin.template:
      src: templates/keepalived.j2
      dest: "/etc/keepalived/keepalived.conf"
      owner: root
      group: root
      mode: '0644'

  - name: Disable service keepalived
    ansible.builtin.systemd_service:
      name: keepalived
      enabled: false
    when: not keepalived|default(false)
    ignore_errors: true

  - name: Reload keepalived
    ansible.builtin.systemd:
      name: keepalived.service
      state: reloaded
    when: not keepalived|default(false)

  # add kubectl to the worker nodes
  - name: Install kubectl on a worker node
    block:
    - name: Add kubectl GPG apt key
      ansible.builtin.apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        keyring: /usr/share/keyrings/cloud.google.gpg
        state: present

    - name: Add kubectl repository
      ansible.builtin.apt_repository:
        repo: deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main
        state: present
        filename: google-cloud-sdk
        
    - name: Add kubectl on the worker node 
      ansible.builtin.apt:
        name: kubectl
        state: present
    when: role == 'worker'

  - name: Create link to kubectl
    ansible.builtin.file:
      src: /usr/local/bin/kubectl
      dest: /usr/bin/kubectl
      state: link
    when: role == 'master' or role == 'combi'
    ignore_errors: true

  - name: Ensure .bashrc has the alias for kubectl
    ansible.builtin.lineinfile:
      path: "{{ lookup('env', 'HOME') }}/.bashrc"
      line: "alias oc='/usr/bin/kubectl'"
      create: yes

  - name: Create a kube directory
    ansible.builtin.file:
      path: "{{ lookup('env', 'HOME') }}/.kube"
      state: directory
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"
      mode: '0750'

  - name: Copy kubeconfig file to remote server
    ansible.builtin.copy:
      src: "{{ lookup('env', 'HOME') }}/.kube/config"
      dest: "{{ lookup('env', 'HOME') }}/.kube/config"
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"      
      mode: '0600'
    ignore_errors: true

  # crontab settings
  - name: Add Kubernetes crontab
    ansible.builtin.template:
      src: templates/crontab.j2
      dest: "/var/spool/cron/crontabs/{{ ansible_user }}"
      owner: "{{ ansible_user }}"
      group: crontab
      mode: '0600'
    when: cron == 'K8s'

  - name: Add additional tasks to crontab
    ansible.builtin.cron:
      name: "{{ item.name }}"
      minute: "{{ item.minute }}"
      hour: "{{ item.hour }}"
      job: "{{ item.job }}"
      user: "{{ item.user }}"
      state: "{{ item.state }}"
    loop: "{{ addition_cron }}"
    when: addition_cron is defined

  when: role in ['combi', 'master', 'worker']


