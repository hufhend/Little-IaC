---
- name: Package Variable Setting
  ansible.builtin.set_fact:
    app: "kubectl"
    app_name: "kubectl"

- name: Set up cloud management utilities 
  block:
  # Kubernetes command-line tool
  - name: Install {{ app_name }} for Kubernetes
    block:
    - name: Add Google GPG key
      ansible.builtin.apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        keyring: /usr/share/keyrings/cloud.google.gpg
        state: present

    - name: Add {{ app_name }} repository
      ansible.builtin.apt_repository:
        repo: deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main
        state: present
        filename: google-cloud-sdk

    - name: Install {{ app_name }}
      ansible.builtin.apt:
        name: kubectl
        state: present
        allow_downgrade: yes
    when: ((role == 'worker') or (kubectl == True)) and (ansible_distribution == "Ubuntu") and (ansible_distribution_release == "jammy" or ansible_distribution_release == "noble")

  - name: Install {{ app_name}}
    block:
    - name: Install {{ app_name }} for RedHat
      command: "{{ app_dir }}/binenv install {{ app }}"
    when: 
      - ansible_distribution == "RedHat"
      - binenv | default(false)

  - name: Create link to {{ app_name }}
    ansible.builtin.file:
      src: /usr/local/bin/kubectl
      dest: /usr/bin/kubectl
      state: link
    when: role == 'master' or role == 'combi' or ansible_distribution == "RedHat"
    ignore_errors: true

  - name: Check if completion script exists
    stat:
      path: "/etc/bash_completion.d/{{ app }}"
    register: completion_script_stat

  - name: Generate completion script
    command: "{{ app }} completion bash"
    register: completion_script
    changed_when: false
    when: not completion_script_stat.stat.exists

  - name: Save completion script
    copy:
      content: "{{ completion_script.stdout }}"
      dest: "/etc/bash_completion.d/{{ app }}"
      mode: "0644"
    when: not completion_script_stat.stat.exists

  - name: Add alias for {{ app_name }}
    ansible.builtin.lineinfile:
      path: "{{ lookup('env', 'HOME') }}/.bashrc"
      line: "alias k='/usr/bin/kubectl'"
      create: yes

  - name: Create a kube directory
    ansible.builtin.file:
      path: "{{ lookup('env', 'HOME') }}/.kube"
      state: directory
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"
      mode: '0750'

  - name: Get local hostname
    local_action: command hostname
    become: no
    register: local_hostname

  - name: Copy kubeconfig file to remote server
    ansible.builtin.copy:
      src: "{{ lookup('env', 'HOME') }}/.kube/config"
      dest: "{{ lookup('env', 'HOME') }}/.kube/config"
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"
      mode: '0600'
    ignore_errors: true
    when: local_hostname.stdout != ansible_hostname

  - name: Check {{ app_name }} version
    command: "/usr/bin/{{ app }} version -o json"
    register: "install_result"
    changed_when: false
    become_user: "{{ ansible_user }}"
    ignore_errors: true

  - name: Show {{ app_name }} version
    debug:
      msg: "{{ install_result.stdout | from_json }}"

  when: (role in ['combi', 'master', 'worker']) or (kubectl == True)
