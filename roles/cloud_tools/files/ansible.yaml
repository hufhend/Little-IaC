---
# Ansible for control node
- name: Package Variable Setting
  ansible.builtin.set_fact:
    app: "ansible"
    app_name: "Ansible"

# Additional repository for Ubuntu
- name: Add Ansible PPA (simple format)
  apt_repository:
    repo: "ppa:ansible/ansible"
    state: present
    update_cache: yes
  when: 
  - ansible == True
  - ansible_distribution == "Ubuntu"

# Installation for Ubuntu and RedHat
- name: Install {{ app_name }}
  ansible.builtin.package:
    name: "{{ app }}-core"
    state: latest
  when: ansible == True

# Show installed version
- block:
    - name: Get {{ app_name }} version
      command: "{{ app }} --version"
      register: ansible_version_result

    - name: Extract and clean versions
      set_fact:
        ansible_core_version: "{{ ansible_version_result.stdout | regex_search('ansible \\[core ([\\d.]+)\\]', '\\1') | default(['unknown']) | first }}"
        python_version: "{{ ansible_version_result.stdout | regex_search('python version = ([\\d.]+)', '\\1') | default(['unknown']) | first }}"
        jinja_version: "{{ ansible_version_result.stdout | regex_search('jinja version = ([\\d.]+)', '\\1') | default(['unknown']) | first }}"
        pyyaml_version: "{{ ansible_version_result.stdout | regex_search('pyyaml version = ([\\d.]+)', '\\1') | default(['unknown'], true) | first }}"

    - name: Show {{ app_name }} version
      ansible.builtin.debug:
        msg: 
        - "{{ app_name }} version is {{ ansible_core_version }}"
        - "Runtime dependencies - Python: {{ python_version }}, Jinja2: {{ jinja_version }}, PyYAML: {{ pyyaml_version }}"
  when: ansible == True
