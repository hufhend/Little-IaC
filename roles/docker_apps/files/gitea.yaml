---
# Self-hosted Git service
- name: Set a app variable
  ansible.builtin.set_fact:
    app: "gitea"
    app_name: "Gitea"

- name: Check if {{ app_name }} exists
  ansible.builtin.stat:
    path: /home/{{ docker_user }}/{{ docker_home }}/{{ app }}
  register: gitea_dir_check

- name: Deploy {{ app_name }}
  block:
    # Required for backup
    - name: Install Python's Requests Library
      ansible.builtin.apt:
        name: python3-requests
        state: present
      become: true
      become_user: root

    - name: Run dump in PostgreSQL container
      community.docker.docker_container_exec:
        container: gitea-db
        command: bash -c "PGPASSWORD='{{ git_db_password }}' pg_dump {{ git_db_name }} -h localhost -U {{ git_db_user }}"
      register: pg_dump_output
      when: gitea_dir_check.stat.exists

    - name: Ensure backup directory exists
      file:
        path: "{{ backup_path }}/{{ app }}"
        state: directory

    - name: Save database backup to file
      copy:
        content: "{{ pg_dump_output.stdout }}"
        dest: "{{ backup_path }}/{{ app }}/gitea-sqlbkp_{{ ansible_date_time.date }}.bak"
      when: pg_dump_output is succeeded    

    - name: Compress the backup file
      ansible.builtin.archive:
        path: "{{ backup_path }}/{{ app }}/gitea-sqlbkp_{{ ansible_date_time.date }}.bak"
        dest: "{{ backup_path }}/{{ app }}/gitea-sqlbkp_{{ ansible_date_time.date }}.tar.gz"
        format: gz
        remove: true
      when: pg_dump_output is succeeded

    - name: Git clone {{ app_name }}
      ansible.builtin.git:
        repo: 'https://github.com/hufhend/gitea.git'
        dest: /home/{{ docker_user }}/{{ docker_home }}/gitea
        force: true

    - name: Include config tasks
      ansible.builtin.include_tasks: "{{ role_path }}/tasks/config.yaml"

    - name: Create and start {{ app_name }}
      community.docker.docker_compose_v2:
        project_src: /home/{{ docker_user }}/{{ docker_home }}/gitea
      # register: output
  when: gitea == true
