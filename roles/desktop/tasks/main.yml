---
- name: Installation and setup of a desktop computer with GUI
  block:
  - name: Install smart desktop packages
    ansible.builtin.apt:
      pkg:
      - openvpn
      - network-manager-openvpn
      - network-manager-openvpn-gnome
      - openvpn-systemd-resolved
      - virtualbox
      - virtualbox-guest-additions-iso
      - nextcloud-desktop
      - flameshot
      - solaar
      - copyq
      - keepassxc
      - thunderbird
      - flatpak

  - name: Create a install directory
    ansible.builtin.file:
      path: /home/{{ user_ansible }}/install
      state: directory
      owner: "{{ ansible_user }}"
      mode: '0755'

  # Oracle VM VirtualBox
  - name: Install Oracle VM VirtualBox
    block:
    - name: Accept Oracle license
      ansible.builtin.debconf:
        name: virtualbox-ext-pack
        question: virtualbox-ext-pack/license
        value: "true"
        vtype: select

    - name: Install VirtualBox Extension Pack
      ansible.builtin.apt:
        pkg: virtualbox-ext-pack
    when: virtualbox == True

  # Vagrant by HashiCorp
  - name: Install Vagrant
    block:
    - name: Add Vagrant GPG apt key
      ansible.builtin.apt_key:
        url: https://apt.releases.hashicorp.com/gpg
        keyring: /usr/share/keyrings/hashicorp-archive-keyring.gpg
        state: present

    - name: Add Vagrant repository
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64 signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main
        state: present
        filename: hashicorp

    - name: Install Vagrant
      ansible.builtin.apt:
        name: vagrant
        state: present
    when: vagrant == True    

  # Chrome browser
  - name: Install Google Chrome
    block:
    - name: Delete old repo file
      ansible.builtin.file:
        path: /etc/apt/sources.list.d/google-chrome.sources
        state: absent

    - name: Add Chrome GPG apt key
      ansible.builtin.apt_key:
        url:  https://dl.google.com/linux/linux_signing_key.pub
        keyring: /usr/share/keyrings/chrome.gpg
        state: present

    - name: Add Chrome repository
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64 signed-by=/usr/share/keyrings/chrome.gpg ] http://dl.google.com/linux/chrome/deb/ stable main
        state: present
        filename: chrome
    when: chrome == True

  # OnlyOffice desktop editors
  - name: Install OnlyOffice
    block:
    - name: Add OnlyOffice GPG key from a public server
      ansible.builtin.apt_key:
        url: https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xCB2DE8E5
        keyring: /usr/share/keyrings/onlyoffice.gpg
        state: present

    - name: Add OnlyOffice repository
      ansible.builtin.apt_repository:
        repo: deb [signed-by=/usr/share/keyrings/onlyoffice.gpg] https://download.onlyoffice.com/repo/debian squeeze main
        state: present
        filename: onlyoffice

    - name: Install OnlyOffice
      ansible.builtin.apt:
        name: onlyoffice-desktopeditors
        state: present
    when: onlyoffice == True

  # Brave browser
  - name: Install Brave browser
    block:
    - name: Add Brave GPG apt key
      ansible.builtin.apt_key:
        url: https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg
        keyring: /usr/share/keyrings/brave-browser-archive-keyring.gpg
        state: present

    - name: Add Brave repository
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64 signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main
        state: present
        filename: brave-browser

    - name: Install Brave browser
      ansible.builtin.apt:
        name: brave-browser
        state: present
    when: brave == True

    # MEGA Desktop App
  - name: Install megasync
    block:
    - name: Download Megasync package
      ansible.builtin.get_url:
        url: https://mega.nz/linux/repo/xUbuntu_{{ ansible_distribution_version }}/amd64/megasync-xUbuntu_{{ ansible_distribution_version }}_amd64.deb
        dest: /home/{{ user_ansible }}/install/megasync-xUbuntu_{{ ansible_distribution_version }}_amd64.deb
    - name: Download Mega manager package
      ansible.builtin.get_url: 
        url: https://mega.nz/linux/repo/xUbuntu_{{ ansible_distribution_version }}/amd64/nautilus-megasync-xUbuntu_{{ ansible_distribution_version }}_amd64.deb
        dest: /home/{{ user_ansible }}/install/nautilus-megasync-xUbuntu_{{ ansible_distribution_version }}_amd64.deb

    - name: Install Megasync Desktop App
      ansible.builtin.apt:
        deb: /home/{{ user_ansible }}/install/megasync-xUbuntu_{{ ansible_distribution_version }}_amd64.deb
        state: present
    - name: Install Mega for nautilus
      ansible.builtin.apt:
        deb: /home/{{ user_ansible }}/install/nautilus-megasync-xUbuntu_{{ ansible_distribution_version }}_amd64.deb
        state: present
        
    - name: Add Megasync repository
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64,arm64 signed-by=/usr/share/keyrings/meganz-archive-keyring.gpg] https://mega.nz/linux/repo/xUbuntu_{{ ansible_distribution_version }}/ ./
        state: present
        filename: megasync
    when: mega == True

  # Steam Game platform
  # It then installs to the user's home and automatically watches for updates
  - name: Install Steam
    block:
    - name: Download Steam package
      ansible.builtin.get_url:
        url: https://cdn.akamai.steamstatic.com/client/installer/steam.deb
        dest: /home/{{ user_ansible }}/install/steam.deb

    - name: Install Steam
      ansible.builtin.apt:
        deb: /home/{{ user_ansible }}/install/steam.deb
        state: present
    when: steam == True

  # Microsoft Visual Studio Code
  - name: Install VS Code
    block:
    - name: Add Microsoft GPG apt key
      ansible.builtin.apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc
        keyring: /usr/share/keyrings/microsoft.gpg
        state: present

    - name: Add Microsoft repository
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64,arm64,armhf signed-by=/usr/share/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/code stable main
        state: present
        filename: vscode-signed

    - name: Delete repo old file
      ansible.builtin.file:
        path: /etc/apt/sources.list.d/vscode.sources
        state: absent

    - name: Install Visual Studio Code
      ansible.builtin.apt:
        name: code
        state: present
    when: vscode == True

  # Support for Cisco VPN
  - name: Install OpenConnect VPN client
    ansible.builtin.apt:
      pkg:
      - openconnect
      - network-manager-openconnect
      - network-manager-openconnect-gnome
      state: present
    when: openconnect == True

  # Kodi Home Theater Software
  - name: Install Kodi media player
    ansible.builtin.apt:
      pkg: kodi
      state: present
    when: kodi == True

  - name: Install Python
    block:
    - name: Add DeadSnakes GPG key
      ansible.builtin.apt_key:
        url: https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xF23C5A6CF475977595C89F51BA6932366A755776
        keyring: /usr/share/keyrings/deadsnakes.gpg
        state: present

    - name: Add Python repository
      ansible.builtin.apt_repository:
        repo: deb [signed-by=/usr/share/keyrings/deadsnakes.gpg] https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu/ {{ ansible_distribution_release }} main
        state: present
        filename: python

    - name: Install Python
      ansible.builtin.apt:
        name: python3
        state: present
    when: python == True    

  - name: Change ownership of packages
    ansible.builtin.file:
      path: /home/{{ user_ansible }}/install/
      state: directory
      recurse: yes
      owner: "{{ user_ansible }}"
      group: "{{ user_ansible }}"

  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_release == "jammy" or ansible_distribution_release == "noble"
    - desktop == true
