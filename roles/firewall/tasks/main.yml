---
- name: Install, configure, and start firewall
  block:

    - name: Allow everything and enable UFW
      community.general.ufw:
        state: enabled
        policy: allow
      when: ansible_os_family | lower != "debian"

    # Sometimes it is desirable to let the sender know when traffic is
    # being denied, rather than simply ignoring it. In these cases, use
    # reject instead of deny. In addition, log rejected connections:
    - name: Reject on Identification Protocol
      community.general.ufw:
        rule: reject
        port: auth
        log: yes
        comment: Reject on auth

    # ufw supports connection rate limiting, which is useful for protecting
    # against brute-force login attacks. ufw will deny connections if an IP
    # address has attempted to initiate 6 or more connections in the last
    # 30 seconds. See  http://www.debian-administration.org/articles/187
    # for details. Typical usage is:
    - name: Defence against brute-force login attacks
      community.general.ufw:
        rule: limit
        port: ssh
        proto: tcp
        src: 0.0.0.0/0
        comment: Limit brute-force login

    - name: Allow ssh from anywhere
      community.general.ufw:
        rule: allow
        name: OpenSSH
        src: 0.0.0.0/0
        comment: Allow SSH from anywhere
      when: ansible_os_family | lower != "redhat"

    - name: Allow Prometheus Node Exporter
      community.general.ufw:
        rule: allow
        port: '9101'
        proto: tcp
        src: "{{ safe_network }}"
        comment: Allow Node Exporter

    # Host-specific rules defined in host-vars
    - name: Allow host ports and services
      community.general.ufw:
        rule: allow
        port: "{{ item.port }}"
        proto: "{{ item.proto | default('tcp') }}"
        src: "{{ safe_network }}"
        comment: "{{ item.comment }}"
      loop: "{{ fw_host_svc }}"
      when: fw_host_svc is defined

    # Rules for Kubernetes nodes
    - name: Allow Kubernetes internal network
      community.general.ufw:
        rule: allow
        to: "{{ kube_network }}"
        route: true
        comment: "Allow Kubernetes network"
      when: 
        - fw_cluster_svc is defined
        - role in ['combi', 'master', 'worker']

    - name: Allow common services
      community.general.ufw:
        rule: allow
        port: "{{ item.port }}"
        proto: "{{ item.proto | default('tcp') }}"
        from: "{{ item.from | default('0.0.0.0/0')}}"
        route: "{{ item.route | default('false')}}"
        comment: "{{ item.comment }}"
      loop: "{{ fw_cluster_svc.common }}"
      when: 
        - fw_cluster_svc is defined
        - role in ['combi', 'master', 'worker']

    - name: Allow services for the master node
      community.general.ufw:
        rule: allow
        port: "{{ item.port }}"
        proto: "{{ item.proto | default('tcp') }}"
        src: "{{ safe_network }}"
        comment: "{{ item.comment }}"
      loop: "{{ fw_cluster_svc.master }}"
      when: 
        - fw_cluster_svc is defined
        - role in ['combi', 'master']        

    - name: Allow services for the worker node
      community.general.ufw:
        rule: allow
        port: "{{ item.port }}"
        proto: "{{ item.proto | default('tcp') }}"
        src: "{{ item.from | default(safe_network) }}"
        comment: "{{ item.comment }}"
      loop: "{{ fw_cluster_svc.worker }}"
      when: 
        - fw_cluster_svc is defined
        - role in ['combi', 'worker']

    - name: Allow all multicast
      community.general.ufw:
        rule: allow
        to: 224.0.0.0/4
        from: "{{ safe_network }}"
        comment: "Allow all multicast"
      when: 
        - fw_cluster_svc is defined
        - role in ['combi', 'master', 'worker']

    - name: Enable UFW
      community.general.ufw:
        state: enabled

    - name: Deny everything 
      community.general.ufw:
        policy: deny

    - name: Set logging
      community.general.ufw:
        logging: 'on'
  when: firewall == true

- name: Turn off UFW and delete all rules
  community.general.ufw:
    state: reset
  when: firewall == false