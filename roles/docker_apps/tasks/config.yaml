---
# Configurations are taken from our own git
- name:  Get {{ app_name }} configuration
  ansible.builtin.git:
    repo: "{{ private_repo }}"
    dest: /tmp/config
    force: true
  ignore_errors: true

- name: Check if source config files exist
  ansible.builtin.stat:
    path: /tmp/config/{{ inventory_hostname }}/{{ app }}
  register: config_exists

- name: Config {{ app_name }}
  block:
    # Warning: tar archive must be created relatively and error-free
    - name: Check if {{ app_name }} config Tar exists
      ansible.builtin.stat:
        path: /home/{{ docker_user }}/{{ docker_home }}/{{ app }}/conf.tgz
      register: config_tar

    # Block for mass configuration
    - name: Config {{ app_name }}
      block:
      - name: Get checksum value from file
        command: awk '{print $1}' /home/{{ docker_user }}/{{ docker_home }}/{{ app }}/conf.tgz.sha
        register: expected_checksum

      - name: Calculating the checksum
        stat:
          path: /home/{{ docker_user }}/{{ docker_home }}/{{ app }}/conf.tgz
          checksum_algorithm: sha256
          get_checksum: yes
        register: actual_file

      - name: List of compared checksums
        ansible.builtin.debug:
          msg:
            - Computed hash: "{{ actual_file.stat.checksum }}"
            - Expected hash: "{{ expected_checksum.stdout }}"

      # If the checksum doesn't match, it stops
      # If completely missing, the entire block is not executed, so the bulk configuration is conditional 
      # on the existence of a checksum file
      - name: Checksum mismatch
        fail:
          msg: "Checksum mismatch. Aborting."
        when: actual_file.stat.checksum != expected_checksum.stdout
        
      - name: Unpack {{ app_name }} config files
        ansible.builtin.unarchive:
          src: /home/{{ docker_user }}/{{ docker_home }}/{{ app }}/conf.tgz
          dest: /home/{{ docker_user }}/{{ docker_home }}/{{ app }}
          remote_src: yes
        become: true
        become_user: root

      - name: Delete Tar config file
        ansible.builtin.file:
          path: /home/{{ docker_user }}/{{ docker_home }}/{{ app }}/conf.tgz
          state: absent

      when: 
        - config_tar.stat.exists

    # Copy configuration files to the current application
    - name: Copy the {{ app_name }} config files
      ansible.builtin.command: sudo rsync -ra /tmp/config/{{ inventory_hostname }}/{{ app }}/ /home/{{ docker_user }}/{{ docker_home }}/{{ app }}
      # when: config_exists.stat.exists

    - name: Shut down {{ app_name }} services
      community.docker.docker_compose_v2:
        project_src: /home/{{ docker_user }}/{{ docker_home }}/{{ app }}
        state: absent
      ignore_errors: true

    - name:  Delete everything old
      ansible.builtin.command: docker system prune -af --volumes
      when: reset | default(false) == true

  when: config_exists.stat.exists

# Starting the application is a matter of the application task
