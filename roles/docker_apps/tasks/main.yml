---
- name: Deploying contejnerized applications
  block:
  - name: Create a Docker directory
    ansible.builtin.file:
      path: /home/{{ docker_user }}/{{ docker_home }}
      state: directory
      owner: "{{ docker_user }}"
      group: "{{ docker_user }}"
      mode: '0750'

  #  Back everything up before any changes
  - name: Create a Docker backup directory
    ansible.builtin.file:
      path: /home/{{ docker_user }}/backup/{{ docker_home }}
      state: directory
      owner: "{{ docker_user }}"
      group: "{{ docker_user }}"
      mode: '0750'

  - name: Add private Gitlab to hosts
    ansible.builtin.lineinfile:
      path: /etc/hosts
      line: "{{ git_hosts }}"
      state: present
    ignore_errors: true
    become: true
    become_user: root

  - name:  Back everything up before any changes
    command: rsync -ra --delete /home/{{ docker_user }}/{{ docker_home }}/ /home/{{ docker_user }}/backup/{{ docker_home }}
    become: true
    become_user: root

  # Automated ACME SSL certificate generation for nginx-proxy
  - name: Clone acme-companion in Docker
    block:
      - name: Set a app variable
        ansible.builtin.set_fact:
          app: "acme-companion"
          app_name: "Let's Encrypt"

      - name: Git clone {{ app_name }}
        ansible.builtin.git:
          repo: 'https://github.com/hufhend/acme-companion.git'
          dest: /home/{{ docker_user }}/{{ docker_home }}/acme-companion
          force: yes

      - name: Configuration {{ app_name }}
        ansible.builtin.include_tasks: "{{ role_path }}/tasks/config.yaml"

      - name: Create and start {{ app_name }}
        community.docker.docker_compose_v2:
          project_src: /home/{{ docker_user }}/{{ docker_home }}/acme-companion
        # register: output
    when: true    

  - name: Add other Docker apps
    include_tasks:
      file: "{{ item }}"
    loop: "{{ query('fileglob', '{{ role_path }}/files/*.yaml') }}"
    no_log: true

  - name: Create a scr directory
    ansible.builtin.file:
      path: "/home/{{ docker_user }}/scr"
      state: directory
      mode: '0754'
      owner: "{{ docker_user }}"
      group: "{{ docker_user }}"    

  - name: Delete temporary files
    ansible.builtin.file:
      path: /tmp/config
      state: absent
    ignore_errors: true

  - name: Add script to update Docker app
    ansible.builtin.template:
      src: templates/docker_update.j2
      dest: "/home/{{ docker_user }}/scr/docker_update.sh"
      owner: "{{ docker_user }}"
      group: "{{ docker_user }}"
      mode: '0760'

  when: role not in ['combi', 'master', 'worker']