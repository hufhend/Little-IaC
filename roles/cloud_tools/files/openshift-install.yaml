---
# Creates OpenShift clusters
- name: Package Variable Setting
  ansible.builtin.set_fact:
    app: "openshift-install"
    app_name: "OpenShift installer"
    app_dir: "/usr/local/bin"
    install_dir: "/home/{{ user_ansible }}/install"
    version: "4.19.13"

- name: Install {{ app_name }}
  block:
  - name: Download openshift-install archive
    ansible.builtin.get_url:
      url: https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/stable/openshift-install-linux-{{ version }}.tar.gz
      dest: "{{ install_dir }}/openshift-install-linux-{{ version }}.tar.gz"
      mode: '0644'

  - name: Extract {{ app_name }} archive
    ansible.builtin.unarchive:
      src: "{{ install_dir }}/openshift-install-linux-{{ version }}.tar.gz"
      dest: "{{ install_dir }}"
      remote_src: yes

  - name: Move {{ app }} to local bin
    ansible.builtin.copy:
      src: "{{ install_dir }}/openshift-install"
      dest: "{{ app_dir }}/openshift-install"
      mode: '0755'
      remote_src: yes

  - name: Check if completion script exists
    stat:
      path: "/etc/bash_completion.d/{{ app }}"
    register: completion_script_stat

  - name: Generate completion script
    command: "{{ app_dir }}/{{ app }} completion bash"
    register: completion_script
    changed_when: false
    when: not completion_script_stat.stat.exists

  - name: Save completion script
    copy:
      content: "{{ completion_script.stdout }}"
      dest: "/etc/bash_completion.d/{{ app }}"
      mode: "0644"
    when: not completion_script_stat.stat.exists

  - name: Verify {{ app_name }} version
    ansible.builtin.command: "{{ app_dir }}/oc version"
    register: oc_version_output
    changed_when: false

  - name: Show {{ app_name }} version
    ansible.builtin.debug:
      msg: "{{ oc_version_output.stdout }}"

  when: ocpinstall == True
