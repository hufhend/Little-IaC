---
# Creates OpenShift clusters
- name: Package Variable Setting
  ansible.builtin.set_fact:
    app: "openshift-install"
    app_name: "OpenShift installer"
    version: "4.19.13"

- name: Install {{ app_name }}
  block:
  # Download and integrity verification
  - name: Create a install directory
    ansible.builtin.file:
      path: "{{ oc_install_dir }}"
      state: directory
      owner: "{{ ansible_user }}"
      mode: '0755'
  
  - name: Download {{ app_name }} checksum
    ansible.builtin.get_url:
      url: https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/{{ version }}/sha256sum.txt
      dest: "{{ oc_install_dir }}/sha256sum.txt"
      mode: '0644'
      force: yes

  - name: Download SHA256 signature file
    ansible.builtin.get_url:
      url: https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/{{ version }}/sha256sum.txt.gpg
      dest: "{{ oc_install_dir }}/sha256sum.txt.gpg"
      mode: '0644'
      force: yes

  - name: Download GPG public key
    ansible.builtin.command:
      cmd: gpg --keyserver hkps://keyserver.ubuntu.com --recv-keys 199E2F91FD431D51

  - name: Verify GPG signature
    ansible.builtin.command:
      cmd: gpg --verify {{ oc_install_dir }}/sha256sum.txt.gpg
    register: gpg_verify_result
    failed_when: gpg_verify_result.rc != 0

  - name: Download openshift-install archive
    ansible.builtin.get_url:
      url: https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/{{ version }}/openshift-install-linux-{{ version }}.tar.gz
      dest: "{{ oc_install_dir }}/openshift-install-linux-{{ version }}.tar.gz"
      mode: '0644'

  - name: Verify checksum of {{ app_name }}
    ansible.builtin.command:
      cmd: sha256sum -c {{ oc_install_dir }}/sha256sum.txt --ignore-missing
      chdir: "{{ oc_install_dir }}"
    register: checksum_result
    failed_when: "'FAILED' in checksum_result.stdout"

  - name: Show checksum verification
    ansible.builtin.debug:
      msg: "{{ checksum_result.stdout_lines | select('search', app) | list }}"

  # Manual installation
  - name: Extract {{ app_name }} archive
    ansible.builtin.unarchive:
      src: "{{ oc_install_dir }}/openshift-install-linux-{{ version }}.tar.gz"
      dest: "{{ oc_install_dir }}"
      remote_src: yes

  - name: Move {{ app }} to local bin
    ansible.builtin.copy:
      src: "{{ oc_install_dir }}/openshift-install"
      dest: "{{ app_dir }}/openshift-install"
      mode: '0755'
      remote_src: yes

  # Completion script tasks
  - name: Check if completion script exists
    stat:
      path: "/etc/bash_completion.d/{{ app }}"
    register: completion_script_stat

  - name: Generate completion script
    command: "{{ app_dir }}/{{ app }} completion bash"
    register: completion_script
    changed_when: false
    when: not completion_script_stat.stat.exists

  - name: Save completion script
    copy:
      content: "{{ completion_script.stdout }}"
      dest: "/etc/bash_completion.d/{{ app }}"
      mode: "0644"
    when: not completion_script_stat.stat.exists

  # Show installed version
  - name: Verify {{ app_name }} version
    ansible.builtin.command: "{{ app_dir }}/{{ app }} version"
    register: install_result
    changed_when: false

  - name: Show {{ app_name }} version
    ansible.builtin.debug:
      msg: "{{ install_result.stdout }}"

  when:
    - oc == True
    - ansible_architecture == "x86_64"
